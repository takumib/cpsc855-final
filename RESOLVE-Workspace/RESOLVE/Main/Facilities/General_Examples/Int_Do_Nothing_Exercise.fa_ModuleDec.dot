digraph {

	ordering=out;
	ranksep=.4;
	bgcolor="lightgrey"; node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
		width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];
	edge [arrowsize=.5, color="black", style="bold"]

n0 [label="FacilityModuleDec"]; //FacilityModuleDec
n1 [label="VirtualListNode"]; //VirtualListNode
n2 [label="FacilityOperationDec"]; //FacilityOperationDec
n3 [label="VirtualListNode"]; //VirtualListNode
n4 [label="ParameterVarDec"]; //ParameterVarDec
n5 [label="NameTy\n(Integer)"]; //NameTy
n6 [label="VirtualListNode"]; //VirtualListNode
n7 [label="CallStmt"]; //CallStmt
n8 [label="VirtualListNode"]; //VirtualListNode
n9 [label="VariableNameExp\n(I)"]; //VariableNameExp
n10 [label="CallStmt"]; //CallStmt
n11 [label="VirtualListNode"]; //VirtualListNode
n12 [label="VariableNameExp\n(I)"]; //VariableNameExp
n13 [label="FacilityOperationDec"]; //FacilityOperationDec
n14 [label="VirtualListNode"]; //VirtualListNode
n15 [label="VarDec"]; //VarDec
n16 [label="NameTy\n(Integer)"]; //NameTy
n17 [label="VirtualListNode"]; //VirtualListNode
n18 [label="FuncAssignStmt\n(X := 3)"]; //FuncAssignStmt
n19 [label="VariableNameExp\n(X)"]; //VariableNameExp
n20 [label="ProgramIntegerExp"]; //ProgramIntegerExp
n21 [label="CallStmt"]; //CallStmt
n22 [label="VirtualListNode"]; //VirtualListNode
n23 [label="VariableNameExp\n(X)"]; //VariableNameExp
n0 -> n1 //VirtualListNode
n1 -> n2 //FacilityOperationDec
n2 -> n3 //VirtualListNode
n3 -> n4 //ParameterVarDec
n4 -> n5 //NameTy
n2 -> n6 //VirtualListNode
n6 -> n7 //CallStmt
n7 -> n8 //VirtualListNode
n8 -> n9 //VariableNameExp
n6 -> n10 //CallStmt
n10 -> n11 //VirtualListNode
n11 -> n12 //VariableNameExp
n1 -> n13 //FacilityOperationDec
n13 -> n14 //VirtualListNode
n14 -> n15 //VarDec
n15 -> n16 //NameTy
n13 -> n17 //VirtualListNode
n17 -> n18 //FuncAssignStmt
n18 -> n19 //VariableNameExp
n18 -> n20 //ProgramIntegerExp
n17 -> n21 //CallStmt
n21 -> n22 //VirtualListNode
n22 -> n23 //VariableNameExp

}
